#!/bin/bash
[ -z "$1" ] && printf "Missing Input File\n" 2>&1 && exit
compress=0
while [ $# -gt 0 ]; do
    case "$(file --mime-type -b "$1")" in
        -c|--continue)
            compress=1
            shift
            ;;
        video/*)
            [ -n "$inputname" ] && audioinput="$1" && shift && continue
            inputname="$1"
            ffmpegPreArgs=" -stream_loop -1"
            ffmpegPostArgs='  -c:v libx264 -pix_fmt yuv420p -preset veryfast -tune film -g 25 -crf 26 -x264opts no-scenecut  -c:a aac -ac 2 -map 0:v -map 1:a -shortest'
            shift
            ;;
        image/gif)
            inputname="$1"
            ffmpegPreArgs=" -ignore_loop 0"
            ffmpegPostArgs=' -c:v libx264 -pix_fmt yuv420p -preset fast -crf 28 -profile:v baseline -tune film -g 30 -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" -c:a aac -movflags +faststart -shortest'
            shift
            ;;
        image/*)
            inputname="$1"
            ffmpegPreArgs=" -r 1 -loop 1"
            ffmpegPostArgs=" -c:v libx264 -pix_fmt yuv420p -r 1 -crf 28 -preset fast -profile:v baseline -tune stillimage -vf ""scale='iw-mod(iw,2)':'ih-mod(ih,2)'"" -c:a aac -map 0:v:0 -map 1:a -movflags +faststart -shortest"
            shift
            ;;
        audio/*)
            audioinput="$1"
            shift
            ;;
        *)
            outputname="${1%.*}.mp4"
            break
            ;;
    esac
done

echo $audioinput
echo $inputname
[ -z "$audioinput" ] || [ -z "$inputname" ] && printf "Missing Input\n" 2>&1 exit 1

[ "$compress" -eq 1 ] && convert "$inputname" -resize 50%x50% "/tmp/tmp-$inputname" && inputname="/tmp/tmp-$inputname"

timeLimit=$(ffprobe -i "${audioinput}" -show_entries format=duration -v quiet -of csv="p=0")

echo "ffmpeg $ffmpegPreArgs -i "$inputname" -i "$audioinput" $ffmpegPostArgs -t "$timeLimit" "$outputname""
ffmpeg $ffmpegPreArgs -i "$inputname" -i "$audioinput" $ffmpegPostArgs -t "$timeLimit" "$outputname"
